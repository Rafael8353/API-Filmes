### Registrar usuário (público)
POST http://localhost:3000/register
Content-Type: application/json

{
  "nome": "Usuario Teste",
  "email": "teste@example.com",
  "senha": "senha123"
}

### Login (público)
POST http://localhost:3000/login
Content-Type: application/json

{
  "email": "teste@example.com",
  "senha": "senha123"
}

### Salvar token da resposta do login para usar depois
@token = <{LOGIN.response.body.token}>

### Listar filmes do usuário (autenticado)
GET http://localhost:3000/filmes
Authorization: Bearer {{token}}

### Criar filme (autenticado)
POST http://localhost:3000/filmes
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "titulo": "Meu Filme Favorito",
  "descricao": "Descrição do filme",
  "ano": 2023
}

### Atualizar filme (autenticado, substituir :id pelo id real)
PUT http://localhost:3000/filmes/1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "titulo": "Filme Atualizado",
  "descricao": "Descrição atualizada",
  "ano": 2024
}

### Excluir filme (autenticado, substituir :id pelo id real)
DELETE http://localhost:3000/filmes/1
Authorization: Bearer {{token}}

### Listar usuários (admin - substitua pelo token admin)
GET http://localhost:3000/usuarios
Authorization: Bearer SEU_TOKEN_ADMIN_AQUI

### Atualizar usuário (admin - substitua :id e token)
PUT http://localhost:3000/usuarios/1
Content-Type: application/json
Authorization: Bearer SEU_TOKEN_ADMIN_AQUI

{
  "nome": "Admin Atualizado",
  "email": "admin@exemplo.com",
  "senha": "senhaAdmin123",
  "perfil": "ADMIN"
}

### Excluir usuário (admin - substitua :id e token)
DELETE http://localhost:3000/usuarios/1
Authorization: Bearer SEU_TOKEN_ADMIN_AQUI
